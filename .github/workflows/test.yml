on:
  push:
    branches:
      - main
    paths-ignore:
      - '*.md'
  pull_request:
    paths-ignore:
      - '*.md'

env:
  PNPM_CACHE_FOLDER: .pnpm-store

jobs:
  test:
    strategy:
      matrix:
        node-version: [^12, ^14, ^15]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: ${{ env.PNPM_CACHE_FOLDER }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - run: npm install -g pnpm

      - name: setup pnpm config
        run: pnpm config set store-dir $PNPM_CACHE_FOLDER

      - run: pnpm -r install

      - run: pnpm test:coverage

      - run: pnpm test:codecov

      - uses: codecov/codecov-action@v1
        with:
          flags: core
  typescript:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: ${{ env.PNPM_CACHE_FOLDER }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - run: npm install -g pnpm

      - name: setup pnpm config
        run: pnpm config set store-dir $PNPM_CACHE_FOLDER

      - run: pnpm -r install

      - name: Run Test
        run: pnpm ts:check
  eslint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: ${{ env.PNPM_CACHE_FOLDER }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - run: npm install -g pnpm

      - name: setup pnpm config
        run: pnpm config set store-dir $PNPM_CACHE_FOLDER

      - run: pnpm -r install

      - name: Run Test
        run: pnpm lint:check
